{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  class: \"w-full h-full\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_van_nav_bar = _resolveComponent(\"van-nav-bar\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$setup.entry === 0 ? (_openBlock(), _createBlock(_component_van_nav_bar, {\n    key: 0,\n    \"left-text\": _ctx.$t('buttons.go_back'),\n    onClickLeft: $setup.onClickLeft,\n    \"left-arrow\": \"\",\n    class: \"bg-white\"\n  }, null, 8 /* PROPS */, [\"left-text\"])) : _createCommentVNode(\"v-if\", true), _createVNode($setup[\"QuestionsComponent\"], {\n    class: \"pt-8\",\n    questions: $setup.questions,\n    answers: $setup.answers,\n    currentDate: $setup.currentDate,\n    entry: $setup.entry,\n    isDark: $setup.theme === 'dark',\n    onOnSubmit: $setup.setAnswers\n  }, null, 8 /* PROPS */, [\"questions\", \"answers\", \"currentDate\", \"entry\", \"isDark\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","$setup","entry","_createBlock","_component_van_nav_bar","_ctx","$t","onClickLeft","_createVNode","questions","answers","currentDate","isDark","theme","onOnSubmit","setAnswers"],"sources":["D:\\working\\wmn-calendar.itserve.es\\src\\views\\QuestionsView.vue"],"sourcesContent":["<template>\r\n\t<div class=\"w-full h-full\">\r\n\t\t<van-nav-bar\r\n\t\t\tv-if=\"entry === 0\"\r\n\t\t\t:left-text=\"$t('buttons.go_back')\"\r\n\t\t\t@click-left=\"onClickLeft\"\r\n\t\t\tleft-arrow\r\n\t\t\tclass=\"bg-white\"\r\n\t\t/>\r\n\t\t<QuestionsComponent\r\n\t\t\tclass=\"pt-8\"\r\n\t\t\t:questions=\"questions\"\r\n\t\t\t:answers=\"answers\"\r\n\t\t\t:currentDate=\"currentDate\"\r\n\t\t\t:entry=\"entry\"\r\n\t\t\t:isDark=\"theme === 'dark'\"\r\n\t\t\t@onSubmit=\"setAnswers\"\r\n\t\t/>\r\n\t</div>\r\n</template>\r\n<script setup>\r\nimport { useStore } from 'vuex';\r\nimport QuestionsComponent from '@/components/QuestionsComponent.vue';\r\nimport { computed } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\n\r\nconst currentDate = new Date();\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\n\r\nconst questions = computed(() => store.state.Auth.questions);\r\nconst answers = computed(() => store.state.Auth.answers);\r\nconst entry = computed(() => store.state.Auth.entry);\r\nconst theme = computed(() => store.state.Auth.theme);\r\n\r\nfunction onClickLeft() {\r\n\treturn router.back();\r\n}\r\n\r\nfunction setAnswers(answers_model) {\r\n\tif (entry.value === 1) {\r\n\t\tstore.dispatch('Auth/setAnswers', answers_model);\r\n\t\tstore.dispatch('Auth/setCalendar');\r\n\t\tstore.dispatch('Auth/setOvulation');\r\n\t\trouter.push({ name: 'PlanView' });\r\n\t} else {\r\n\t\tstore.dispatch('Auth/updateAnswers', answers_model);\r\n\t\trouter.push({ name: 'HomeView' });\r\n\t}\r\n}\r\n</script>\r\n<style scoped></style>\r\n"],"mappings":";;EACMA,KAAK,EAAC;AAAe;;;uBAA1BC,mBAAA,CAiBM,OAjBNC,UAiBM,GAfEC,MAAA,CAAAC,KAAK,U,cADZC,YAAA,CAMEC,sBAAA;;IAJA,WAAS,EAAEC,IAAA,CAAAC,EAAE;IACbC,WAAU,EAAEN,MAAA,CAAAM,WAAW;IACxB,YAAU,EAAV,EAAU;IACVT,KAAK,EAAC;+EAEPU,YAAA,CAQEP,MAAA;IAPDH,KAAK,EAAC,MAAM;IACXW,SAAS,EAAER,MAAA,CAAAQ,SAAS;IACpBC,OAAO,EAAET,MAAA,CAAAS,OAAO;IAChBC,WAAW,EAAEV,MAAA,CAAAU,WAAW;IACxBT,KAAK,EAAED,MAAA,CAAAC,KAAK;IACZU,MAAM,EAAEX,MAAA,CAAAY,KAAK;IACbC,UAAQ,EAAEb,MAAA,CAAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}