{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_van_switch = _resolveComponent(\"van-switch\");\n  var _component_van_cell = _resolveComponent(\"van-cell\");\n  return _openBlock(), _createBlock(_component_van_cell, {\n    center: \"\",\n    title: $setup.theme === 'dark' ? _ctx.$t('settings.theme.dark') : _ctx.$t('settings.theme.light')\n  }, {\n    \"right-icon\": _withCtx(() => [_createVNode(_component_van_switch, {\n      modelValue: $setup.checked,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.checked = $event),\n      onChange: $setup.changeTheme\n    }, null, 8 /* PROPS */, [\"modelValue\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\"]);\n}","map":{"version":3,"names":["_createBlock","_component_van_cell","center","title","$setup","theme","_ctx","$t","_withCtx","_createVNode","_component_van_switch","checked","$event","onChange","changeTheme"],"sources":["D:\\working\\wmn-calendar.itserve.es\\src\\components\\specific\\ThemeSwitch.vue"],"sourcesContent":["<template>\r\n\t<van-cell\r\n\t\tcenter\r\n\t\t:title=\"\r\n\t\t\ttheme === 'dark' ? $t('settings.theme.dark') : $t('settings.theme.light')\r\n\t\t\"\r\n\t>\r\n\t\t<template #right-icon>\r\n\t\t\t<van-switch v-model=\"checked\" @change=\"changeTheme\" />\r\n\t\t</template>\r\n\t</van-cell>\r\n</template>\r\n\r\n<script setup>\r\nimport appBridge from '@/mixins/app-bridge';\r\nimport { computed, ref, watch } from 'vue';\r\nimport { onMounted } from 'vue';\r\nimport { useStore } from 'vuex';\r\n\r\nconst store = useStore();\r\n\r\nconst checked = ref(false);\r\n\r\nconst theme = ref(store.state.Auth.theme);\r\n\r\nonMounted(() => {\r\n\tif (theme === 'dark') {\r\n\t\tchecked.value = true;\r\n\t}\r\n});\r\n\r\nfunction changeTheme() {\r\n\tif (checked.value) {\r\n\t\tstore.dispatch('Auth/putTheme', 'dark');\r\n\t\t// appBridge.methods.nativeSendEvent('setThemeMode', 'dark');\r\n\t} else {\r\n\t\tstore.dispatch('Auth/putTheme', 'light');\r\n\t\t// appBridge.methods.nativeSendEvent('setThemeMode', 'light');\r\n\t}\r\n}\r\n</script>\r\n\r\n<style scoped></style>\r\n"],"mappings":";;;;uBACCA,YAAA,CASWC,mBAAA;IARVC,MAAM,EAAN,EAAM;IACLC,KAAK,EAAOC,MAAA,CAAAC,KAAK,cAAcC,IAAA,CAAAC,EAAE,0BAA0BD,IAAA,CAAAC,EAAE;;IAInD,YAAU,EAAAC,QAAA,CACpB,MAAsD,CAAtDC,YAAA,CAAsDC,qBAAA;kBAAjCN,MAAA,CAAAO,OAAO;iEAAPP,MAAA,CAAAO,OAAO,GAAAC,MAAA;MAAGC,QAAM,EAAET,MAAA,CAAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}