{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  methods: {\n    getAttrs(arr1, arr2, arr3, date) {\n      var calendar = arr1.map(elem => {\n        var fillMode = 'solid';\n        if (new Date(elem.date).getTime() > date.getTime()) {\n          fillMode = 'light';\n        }\n        return {\n          highlight: {\n            color: 'product-pink',\n            fillMode: fillMode\n          },\n          dates: new Date(elem.date)\n        };\n      });\n      var ovulation = arr2.map(elem => {\n        return {\n          dot: {\n            style: {\n              backgroundColor: 'pink'\n            }\n          },\n          dates: [new Date(elem.date)]\n        };\n      });\n      var fertileDates = arr3.map(elem => {\n        return {\n          dot: {\n            style: {\n              backgroundColor: 'product-pink'\n            }\n          },\n          dates: [new Date(elem.date)]\n        };\n      });\n      return [...calendar, ...ovulation, ...fertileDates];\n    },\n    getAttrsWithNotes(arr1, arr2, arr3, arr4, date) {\n      var dates = this.getAttrs(arr1, arr2, arr3, date);\n      var grayNotes = arr4.map(elem => {\n        if (elem.sexual_act_protected || elem.sexual_act_unprotected || elem.symptoms || elem.pills || elem.temperature || elem.weight || elem.water || elem.notes || elem.mood) {\n          return {\n            dot: {\n              style: {\n                backgroundColor: 'gray'\n              }\n            },\n            dates: [new Date(elem.date)]\n          };\n        }\n      });\n\n      // // ---------------------------------------------------------\n      // // If you need more notes dots, you can use this\n\n      // let redNotes = arr2.map(elem => {\n      // \tif (\n      // \t\telem.sexual_act_protected ||\n      // \t\telem.sexual_act_unprotected ||\n      // \t\telem.symptoms\n      // \t) {\n      // \t\treturn {\n      // \t\t\tdot: {\n      // \t\t\t\tstyle: {\n      // \t\t\t\t\tbackgroundColor: 'red',\n      // \t\t\t\t},\n      // \t\t\t},\n      // \t\t\tdates: [new Date(elem.date)],\n      // \t\t};\n      // \t}\n      // });\n\n      // let grayNotes = arr2.map(elem => {\n      // \tif (elem.pills || elem.temperature) {\n      // \t\treturn {\n      // \t\t\tdot: {\n      // \t\t\t\tstyle: {\n      // \t\t\t\t\tbackgroundColor: 'gray',\n      // \t\t\t\t},\n      // \t\t\t},\n      // \t\t\tdates: [new Date(elem.date)],\n      // \t\t};\n      // \t}\n      // });\n\n      // let blueNotes = arr2.map(elem => {\n      // \tif (elem.weight || elem.water) {\n      // \t\treturn {\n      // \t\t\tdot: {\n      // \t\t\t\tstyle: {\n      // \t\t\t\t\tbackgroundColor: 'blue',\n      // \t\t\t\t},\n      // \t\t\t},\n      // \t\t\tdates: [new Date(elem.date)],\n      // \t\t};\n      // \t}\n      // });\n\n      // let yellowNotes = arr2.map(elem => {\n      // \tif (elem.notes || elem.mood) {\n      // \t\treturn {\n      // \t\t\tdot: {\n      // \t\t\t\tstyle: {\n      // \t\t\t\t\tbackgroundColor: 'yellow',\n      // \t\t\t\t},\n      // \t\t\t},\n      // \t\t\tdates: [new Date(elem.date)],\n      // \t\t};\n      // \t}\n      // });\n      // return [\n      // \t...dates,\n      // \t...redNotes,\n      // \t...grayNotes,\n      // \t...blueNotes,\n      // \t...yellowNotes,\n      // ];\n      // // ---------------------------------------------------------\n\n      // return [\n      // \t...dates,\n      // \t...redNotes,\n      // \t...grayNotes,\n      // \t...blueNotes,\n      // \t...yellowNotes,\n      // ];\n\n      return [...dates, ...grayNotes];\n    },\n    doesHaveDate(arr, date) {\n      var flag = -1;\n      for (var i = 0; i < arr.length; i++) {\n        if (arr[i].date == date) {\n          flag = i;\n        }\n      }\n      return flag;\n    },\n    sortDates(arr) {\n      return arr.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());\n    },\n    addIndexDay(arr) {\n      var result = [];\n      var day = 24 * 3600 * 1000;\n      for (var i = 0; i < arr.length; i++) {\n        result.push({\n          date_index: i,\n          date: arr[i].date\n        });\n      }\n      return arr;\n    }\n  }\n};","map":{"version":3,"names":["methods","getAttrs","arr1","arr2","arr3","date","calendar","map","elem","fillMode","Date","getTime","highlight","color","dates","ovulation","dot","style","backgroundColor","fertileDates","getAttrsWithNotes","arr4","grayNotes","sexual_act_protected","sexual_act_unprotected","symptoms","pills","temperature","weight","water","notes","mood","doesHaveDate","arr","flag","i","length","sortDates","sort","a","b","addIndexDay","result","day","push","date_index"],"sources":["D:/working/wmn-calendar.itserve.es/src/mixins/calendar-functions.js"],"sourcesContent":["export default {\r\n\tmethods: {\r\n\t\tgetAttrs(arr1, arr2, arr3, date) {\r\n\t\t\tlet calendar = arr1.map(elem => {\r\n\t\t\t\tlet fillMode = 'solid';\r\n\t\t\t\tif (new Date(elem.date).getTime() > date.getTime()) {\r\n\t\t\t\t\tfillMode = 'light';\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\thighlight: {\r\n\t\t\t\t\t\tcolor: 'product-pink',\r\n\t\t\t\t\t\tfillMode: fillMode,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdates: new Date(elem.date),\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t\tlet ovulation = arr2.map(elem => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tdot: {\r\n\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\tbackgroundColor: 'pink',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdates: [new Date(elem.date)],\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t\tlet fertileDates = arr3.map(elem => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tdot: {\r\n\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\tbackgroundColor: 'product-pink',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdates: [new Date(elem.date)],\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t\treturn [...calendar, ...ovulation, ...fertileDates];\r\n\t\t},\r\n\t\tgetAttrsWithNotes(arr1, arr2, arr3, arr4, date) {\r\n\t\t\tlet dates = this.getAttrs(arr1, arr2, arr3, date);\r\n\r\n\t\t\tlet grayNotes = arr4.map(elem => {\r\n\t\t\t\tif (\r\n\t\t\t\t\telem.sexual_act_protected ||\r\n\t\t\t\t\telem.sexual_act_unprotected ||\r\n\t\t\t\t\telem.symptoms ||\r\n\t\t\t\t\telem.pills ||\r\n\t\t\t\t\telem.temperature ||\r\n\t\t\t\t\telem.weight ||\r\n\t\t\t\t\telem.water ||\r\n\t\t\t\t\telem.notes ||\r\n\t\t\t\t\telem.mood\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tdot: {\r\n\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\tbackgroundColor: 'gray',\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tdates: [new Date(elem.date)],\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// // ---------------------------------------------------------\r\n\t\t\t// // If you need more notes dots, you can use this\r\n\r\n\t\t\t// let redNotes = arr2.map(elem => {\r\n\t\t\t// \tif (\r\n\t\t\t// \t\telem.sexual_act_protected ||\r\n\t\t\t// \t\telem.sexual_act_unprotected ||\r\n\t\t\t// \t\telem.symptoms\r\n\t\t\t// \t) {\r\n\t\t\t// \t\treturn {\r\n\t\t\t// \t\t\tdot: {\r\n\t\t\t// \t\t\t\tstyle: {\r\n\t\t\t// \t\t\t\t\tbackgroundColor: 'red',\r\n\t\t\t// \t\t\t\t},\r\n\t\t\t// \t\t\t},\r\n\t\t\t// \t\t\tdates: [new Date(elem.date)],\r\n\t\t\t// \t\t};\r\n\t\t\t// \t}\r\n\t\t\t// });\r\n\r\n\t\t\t// let grayNotes = arr2.map(elem => {\r\n\t\t\t// \tif (elem.pills || elem.temperature) {\r\n\t\t\t// \t\treturn {\r\n\t\t\t// \t\t\tdot: {\r\n\t\t\t// \t\t\t\tstyle: {\r\n\t\t\t// \t\t\t\t\tbackgroundColor: 'gray',\r\n\t\t\t// \t\t\t\t},\r\n\t\t\t// \t\t\t},\r\n\t\t\t// \t\t\tdates: [new Date(elem.date)],\r\n\t\t\t// \t\t};\r\n\t\t\t// \t}\r\n\t\t\t// });\r\n\r\n\t\t\t// let blueNotes = arr2.map(elem => {\r\n\t\t\t// \tif (elem.weight || elem.water) {\r\n\t\t\t// \t\treturn {\r\n\t\t\t// \t\t\tdot: {\r\n\t\t\t// \t\t\t\tstyle: {\r\n\t\t\t// \t\t\t\t\tbackgroundColor: 'blue',\r\n\t\t\t// \t\t\t\t},\r\n\t\t\t// \t\t\t},\r\n\t\t\t// \t\t\tdates: [new Date(elem.date)],\r\n\t\t\t// \t\t};\r\n\t\t\t// \t}\r\n\t\t\t// });\r\n\r\n\t\t\t// let yellowNotes = arr2.map(elem => {\r\n\t\t\t// \tif (elem.notes || elem.mood) {\r\n\t\t\t// \t\treturn {\r\n\t\t\t// \t\t\tdot: {\r\n\t\t\t// \t\t\t\tstyle: {\r\n\t\t\t// \t\t\t\t\tbackgroundColor: 'yellow',\r\n\t\t\t// \t\t\t\t},\r\n\t\t\t// \t\t\t},\r\n\t\t\t// \t\t\tdates: [new Date(elem.date)],\r\n\t\t\t// \t\t};\r\n\t\t\t// \t}\r\n\t\t\t// });\r\n\t\t\t// return [\r\n\t\t\t// \t...dates,\r\n\t\t\t// \t...redNotes,\r\n\t\t\t// \t...grayNotes,\r\n\t\t\t// \t...blueNotes,\r\n\t\t\t// \t...yellowNotes,\r\n\t\t\t// ];\r\n\t\t\t// // ---------------------------------------------------------\r\n\r\n\t\t\t// return [\r\n\t\t\t// \t...dates,\r\n\t\t\t// \t...redNotes,\r\n\t\t\t// \t...grayNotes,\r\n\t\t\t// \t...blueNotes,\r\n\t\t\t// \t...yellowNotes,\r\n\t\t\t// ];\r\n\r\n\t\t\treturn [...dates, ...grayNotes];\r\n\t\t},\r\n\t\tdoesHaveDate(arr, date) {\r\n\t\t\tlet flag = -1;\r\n\t\t\tfor (let i = 0; i < arr.length; i++) {\r\n\t\t\t\tif (arr[i].date == date) {\r\n\t\t\t\t\tflag = i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn flag;\r\n\t\t},\r\n\t\tsortDates(arr) {\r\n\t\t\treturn arr.sort(\r\n\t\t\t\t(a, b) => new Date(a.date).getTime() - new Date(b.date).getTime()\r\n\t\t\t);\r\n\t\t},\r\n\t\taddIndexDay(arr) {\r\n\t\t\tlet result = [];\r\n\t\t\tlet day = 24 * 3600 * 1000;\r\n\t\t\tfor (let i = 0; i < arr.length; i++) {\r\n\t\t\t\tresult.push({ date_index: i, date: arr[i].date });\r\n\t\t\t}\r\n\t\t\treturn arr;\r\n\t\t},\r\n\t},\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}