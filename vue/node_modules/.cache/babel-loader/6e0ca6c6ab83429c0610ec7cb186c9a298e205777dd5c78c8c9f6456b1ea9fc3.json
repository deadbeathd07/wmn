{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nexport default {\n  __name: 'TemperatureView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    var store = useStore();\n    var router = useRouter();\n    var columns = getColumnsTemperature();\n    var fieldValue = ref(store.state.Auth.notes.temperature);\n    var showPicker = ref(false);\n    function onConfirm({\n      selectedOptions\n    }) {\n      showPicker.value = false;\n      fieldValue.value = Number(`${selectedOptions[0].text}.${selectedOptions[1].text}`);\n    }\n    function onClick() {\n      store.dispatch('Auth/setTemperature', fieldValue.value);\n      router.push({\n        name: 'NotesView'\n      });\n    }\n    function getColumnsTemperature() {\n      var grad = [];\n      for (var i = 35; i <= 42; i++) {\n        grad.push({\n          text: i,\n          value: i\n        });\n      }\n      var gradDeg = [];\n      for (var j = 0; j <= 9; j++) {\n        gradDeg.push({\n          text: j,\n          value: j\n        });\n      }\n      var result = [];\n      result.push(grad);\n      result.push(gradDeg);\n      return result;\n    }\n    var __returned__ = {\n      store,\n      router,\n      columns,\n      fieldValue,\n      showPicker,\n      onConfirm,\n      onClick,\n      getColumnsTemperature,\n      ref,\n      get useRouter() {\n        return useRouter;\n      },\n      get useStore() {\n        return useStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","useRouter","useStore","store","router","columns","getColumnsTemperature","fieldValue","state","Auth","notes","temperature","showPicker","onConfirm","selectedOptions","value","Number","text","onClick","dispatch","push","name","grad","i","gradDeg","j","result"],"sources":["D:/working/wmn-calendar.itserve.es/src/views/notes/TemperatureView.vue"],"sourcesContent":["<template>\r\n\t<div class=\"w-full flex items-center justify-around\">\r\n\t\t<h2 class=\"text-decor text-rotate text-5xl\">\r\n\t\t\t{{ $t('routes.TemperatureView') }}\r\n\t\t</h2>\r\n\t\t<img\r\n\t\t\tsrc=\"../../assets/thermometer.png\"\r\n\t\t\talt=\"thermometer\"\r\n\t\t\tclass=\"h-32 w-32\"\r\n\t\t/>\r\n\t</div>\r\n\t<van-cell-group inset class=\"w-full mt-5\">\r\n\t\t<van-field\r\n\t\t\tv-model=\"fieldValue\"\r\n\t\t\tis-link\r\n\t\t\treadonly\r\n\t\t\t@click=\"showPicker = true\"\r\n\t\t/>\r\n\t\t<van-popup v-model:show=\"showPicker\" round position=\"bottom\">\r\n\t\t\t<van-picker\r\n\t\t\t\t:columns=\"columns\"\r\n\t\t\t\t@cancel=\"showPicker = false\"\r\n\t\t\t\t@confirm=\"onConfirm\"\r\n\t\t\t/>\r\n\t\t</van-popup>\r\n\t</van-cell-group>\r\n\t<van-button\r\n\t\ticon=\"success\"\r\n\t\tround\r\n\t\ttype=\"success\"\r\n\t\tclass=\"w-12 h-12 mt-2\"\r\n\t\t@click=\"onClick\"\r\n\t/>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { useStore } from 'vuex';\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst columns = getColumnsTemperature();\r\n\r\nconst fieldValue = ref(store.state.Auth.notes.temperature);\r\nconst showPicker = ref(false);\r\n\r\nfunction onConfirm({ selectedOptions }) {\r\n\tshowPicker.value = false;\r\n\tfieldValue.value = Number(\r\n\t\t`${selectedOptions[0].text}.${selectedOptions[1].text}`\r\n\t);\r\n}\r\n\r\nfunction onClick() {\r\n\tstore.dispatch('Auth/setTemperature', fieldValue.value);\r\n\trouter.push({ name: 'NotesView' });\r\n}\r\n\r\nfunction getColumnsTemperature() {\r\n\tlet grad = [];\r\n\tfor (let i = 35; i <= 42; i++) {\r\n\t\tgrad.push({ text: i, value: i });\r\n\t}\r\n\tlet gradDeg = [];\r\n\tfor (let j = 0; j <= 9; j++) {\r\n\t\tgradDeg.push({ text: j, value: j });\r\n\t}\r\n\tlet result = [];\r\n\tresult.push(grad);\r\n\tresult.push(gradDeg);\r\n\treturn result;\r\n}\r\n</script>\r\n\r\n<style></style>\r\n"],"mappings":";AAoCA,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,QAAQ,QAAQ,MAAM;;;;;;;IAE/B,IAAMC,KAAK,GAAGD,QAAQ,CAAC,CAAC;IACxB,IAAME,MAAM,GAAGH,SAAS,CAAC,CAAC;IAC1B,IAAMI,OAAO,GAAGC,qBAAqB,CAAC,CAAC;IAEvC,IAAMC,UAAU,GAAGP,GAAG,CAACG,KAAK,CAACK,KAAK,CAACC,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC;IAC1D,IAAMC,UAAU,GAAGZ,GAAG,CAAC,KAAK,CAAC;IAE7B,SAASa,SAASA,CAAC;MAAEC;IAAgB,CAAC,EAAE;MACvCF,UAAU,CAACG,KAAK,GAAG,KAAK;MACxBR,UAAU,CAACQ,KAAK,GAAGC,MAAM,CACvB,GAAEF,eAAe,CAAC,CAAC,CAAC,CAACG,IAAK,IAAGH,eAAe,CAAC,CAAC,CAAC,CAACG,IAAK,EACvD,CAAC;IACF;IAEA,SAASC,OAAOA,CAAA,EAAG;MAClBf,KAAK,CAACgB,QAAQ,CAAC,qBAAqB,EAAEZ,UAAU,CAACQ,KAAK,CAAC;MACvDX,MAAM,CAACgB,IAAI,CAAC;QAAEC,IAAI,EAAE;MAAY,CAAC,CAAC;IACnC;IAEA,SAASf,qBAAqBA,CAAA,EAAG;MAChC,IAAIgB,IAAI,GAAG,EAAE;MACb,KAAK,IAAIC,CAAC,GAAG,EAAE,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;QAC9BD,IAAI,CAACF,IAAI,CAAC;UAAEH,IAAI,EAAEM,CAAC;UAAER,KAAK,EAAEQ;QAAE,CAAC,CAAC;MACjC;MACA,IAAIC,OAAO,GAAG,EAAE;MAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC5BD,OAAO,CAACJ,IAAI,CAAC;UAAEH,IAAI,EAAEQ,CAAC;UAAEV,KAAK,EAAEU;QAAE,CAAC,CAAC;MACpC;MACA,IAAIC,MAAM,GAAG,EAAE;MACfA,MAAM,CAACN,IAAI,CAACE,IAAI,CAAC;MACjBI,MAAM,CAACN,IAAI,CAACI,OAAO,CAAC;MACpB,OAAOE,MAAM;IACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}