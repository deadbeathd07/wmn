{"ast":null,"code":"import { createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createBlock as _createBlock, withCtx as _withCtx } from \"vue\";\nvar _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_router_view = _resolveComponent(\"router-view\");\n  var _component_van_col = _resolveComponent(\"van-col\");\n  var _component_van_row = _resolveComponent(\"van-row\");\n  return _openBlock(), _createBlock(_component_van_row, {\n    class: \"h-full bg-no-repeat bg-clip-border bg-origin-border bg-center bg-cover\",\n    justify: \"center\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_van_col, {\n      span: \"24\",\n      class: \"h-full\"\n    }, {\n      default: _withCtx(() => [_createVNode($setup[\"ItserveLoader\"], {\n        show: $setup.showLoader\n      }, null, 8 /* PROPS */, [\"show\"]), !$setup.nativeData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, \"Loading\")) : (_openBlock(), _createBlock(_component_router_view, {\n        key: 1\n      }))]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_van_row","class","justify","_createVNode","_component_van_col","span","$setup","show","showLoader","nativeData","_createElementBlock","_hoisted_1","_component_router_view","key"],"sources":["D:\\working\\wmn-calendar.itserve.es\\src\\App.vue"],"sourcesContent":["<template>\r\n\t<van-row\r\n\t\tclass=\"h-full bg-no-repeat bg-clip-border bg-origin-border bg-center bg-cover\"\r\n\t\tjustify=\"center\"\r\n\t>\r\n\t\t<van-col span=\"24\" class=\"h-full\">\r\n\t\t\t<ItserveLoader :show=\"showLoader\" />\r\n\t\t\t<div v-if=\"!nativeData\">Loading</div>\r\n\t\t\t<router-view v-else />\r\n\t\t</van-col>\r\n\t</van-row>\r\n</template>\r\n<script setup>\r\nimport { onBeforeMount, ref, watch } from 'vue';\r\nimport appBridge from './mixins/app-bridge';\r\nimport goBack from './mixins/go-back';\r\nimport ItserveLoader from '@/components/content/ItserveLoader';\r\nimport { useStore } from 'vuex';\r\nimport { computed } from 'vue';\r\nimport { useRoute, useRouter } from 'vue-router';\r\nimport { useI18n } from 'vue-i18n';\r\n\r\nconst store = useStore();\r\nconst route = useRoute();\r\nconst router = useRouter();\r\nconst i18n = useI18n();\r\n\r\nconst nativeData = computed(() => store.state.Auth.nativeData);\r\nconst showLoader = computed(() => store.state.Api.loading);\r\nconst locale = computed(() => store.state.Auth.locale);\r\nconst appTheme = computed(() => store.state.Auth.nativeData.themeMode);\r\nconst authToken = computed(() => store.state.Auth.authToken);\r\nconst entry = ref(store.state.Settings.entry);\r\nconst calendar = computed(() => store.state.Auth.calendar);\r\n\r\n// This authData and authentificate of it below are necessary for entry in browser (for developing)\r\nlet authData = {\r\n\tuid: '734656345683485',\r\n\tfirebase_token: 'aaaaaaaaaaaaaa',\r\n\ttheme_mode: 'dark',\r\n\tlang: 'en',\r\n\tgoogle_id_token: '',\r\n\tgoogle_access_token: '',\r\n\tplatform: 'ios',\r\n\tapple_user_id: '',\r\n\tagreement: false,\r\n};\r\n\r\nstore.dispatch('Auth/authenticate', authData);\r\n\r\nconsole.log('app setting', JSON.stringify(nativeData.value));\r\n\r\nonBeforeMount(() => {\r\n\tdocument.body.classList.add('dark'); //can be removed, couse\r\n});\r\n\r\nappBridge.methods.nativeWaitForEvent('authToken', authData => {\r\n\tstore.dispatch('Auth/authenticate', authData);\r\n\tnativeData.value = authData;\r\n\tstore.dispatch('Auth/newGoogleAuth');\r\n\tconsole.log('native set auth', JSON.stringify(nativeData.value));\r\n\t// if(store.dispatch(\"Auth/authenticate\", authData)) {\r\n\t//   appBridge.methods.nativeSendEvent(\"preloadInterstitial\");\r\n\t// }\r\n\t// if (nativeData.google_id_token.length > 0 || nativeData.google_access_token.length > 0 || nativeData.apple_user_id.length > 0) {\r\n\t//   appBridge.methods.nativeSendEvent(\"preloadInterstitial\");\r\n\t// }\r\n});\r\n\r\nappBridge.methods.nativeWaitForEvent('authTokenListen', authData => {\r\n\tstore.dispatch('Auth/authenticate', authData);\r\n\tnativeData.value = authData;\r\n\tstore.dispatch('Auth/newGoogleAuth');\r\n\tconsole.log('native listen auth', JSON.stringify(nativeData.value));\r\n});\r\n\r\n// appBridge.methods.nativeWaitForEvent('backButton', () => {\r\n// \tif (route.name === 'HomeView') {\r\n// \t\tappBridge.methods.nativeSendEvent('setPageLevel', { level: 0 });\r\n// \t} else {\r\n// \t\tappBridge.methods.nativeSendEvent('setPageLevel', { level: 1 });\r\n// \t\tgoBack.methods.goBack();\r\n// \t}\r\n// });\r\n\r\n// appBridge.methods.nativeWaitForEvent('deepLink', deepLinkData => {\r\n// \trouter.push(deepLinkData);\r\n// });\r\n\r\nwatch(authToken, () => {\r\n\tconsole.log('watch auth');\r\n\tstore.dispatch('Settings/getEntry');\r\n\tstore.dispatch('Auth/getQuestions', locale.value);\r\n});\r\n\r\nwatch(locale, (newLocale, oldLocale) => {\r\n\tconsole.log('watch locale');\r\n\ti18n.locale.value = newLocale;\r\n\tstore.dispatch('Auth/getQuestions', newLocale);\r\n});\r\n\r\nwatch(nativeData, () => {\r\n\tconsole.log('watch native');\r\n\tconsole.log(entry.value);\r\n\t// if (nativeData.value && entry.value) {\r\n\t// \trouter.push({ name: 'QuestionsView' });\r\n\t// } else if (nativeData.value && !nativeData.value.google_access_token) {\r\n\t// \trouter.push({ name: 'AuthorizationView' });\r\n\t// } else {\r\n\t// \trouter.push({ name: 'HomeView' });\r\n\t// }\r\n});\r\n\r\nasync function clearForGoogleAuth({ commit }) {\r\n\tawait commit('Auth/SET_NATIVE_DATA', null);\r\n}\r\n</script>\r\n<style>\r\n:root {\r\n\t--van-primary-color: rgba(236, 101, 124, 1);\r\n\t--van-background-2: white;\r\n}\r\n\r\n.bg-light {\r\n\tbackground-image: url('@/assets/images/bg-light.png');\r\n}\r\n\r\n.bg-cloud {\r\n\tbackground-image: url('@/assets/images/cloud.png');\r\n}\r\n</style>\r\n"],"mappings":";;;;;;;;uBACCA,YAAA,CASUC,kBAAA;IARTC,KAAK,EAAC,wEAAwE;IAC9EC,OAAO,EAAC;;sBAER,MAIU,CAJVC,YAAA,CAIUC,kBAAA;MAJDC,IAAI,EAAC,IAAI;MAACJ,KAAK,EAAC;;wBACxB,MAAoC,CAApCE,YAAA,CAAoCG,MAAA;QAApBC,IAAI,EAAED,MAAA,CAAAE;MAAU,mC,CACpBF,MAAA,CAAAG,UAAU,I,cAAtBC,mBAAA,CAAqC,OAAAC,UAAA,EAAb,SAAO,M,cAC/BZ,YAAA,CAAsBa,sBAAA;QAAAC,GAAA;MAAA,I"},"metadata":{},"sourceType":"module","externalDependencies":[]}