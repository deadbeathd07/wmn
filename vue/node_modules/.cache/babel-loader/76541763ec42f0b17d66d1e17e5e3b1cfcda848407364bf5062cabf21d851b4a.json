{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  class: \"w-full h-full\"\n};\nvar _hoisted_2 = {\n  class: \"flex flex-col items-center px-5\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_van_icon = _resolveComponent(\"van-icon\");\n  var _component_van_nav_bar = _resolveComponent(\"van-nav-bar\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_van_nav_bar, {\n    \"left-arrow\": \"\",\n    \"left-text\": _ctx.$t('buttons.go_back'),\n    onClickLeft: $setup.onClickLeft,\n    onClickRight: $setup.onClickRight\n  }, {\n    right: _withCtx(() => [_createVNode(_component_van_icon, {\n      name: \"setting\",\n      size: \"30\"\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"left-text\"]), _createElementVNode(\"div\", _hoisted_2, [_createVNode($setup[\"CalendarComponent\"], {\n    rows: 2,\n    attributes: $setup.attributes,\n    currentDate: $setup.currentDate,\n    onClick: $setup.dayClick\n  }, null, 8 /* PROPS */, [\"attributes\", \"currentDate\"])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_van_nav_bar","_ctx","$t","onClickLeft","$setup","onClickRight","right","_withCtx","_component_van_icon","name","size","_createElementVNode","_hoisted_2","rows","attributes","currentDate","onClick","dayClick"],"sources":["D:\\working\\wmn-calendar.itserve.es\\src\\views\\CalendarView.vue"],"sourcesContent":["<template>\r\n\t<div class=\"w-full h-full\">\r\n\t\t<van-nav-bar\r\n\t\t\tleft-arrow\r\n\t\t\t:left-text=\"$t('buttons.go_back')\"\r\n\t\t\t@click-left=\"onClickLeft\"\r\n\t\t\t@click-right=\"onClickRight\"\r\n\t\t>\r\n\t\t\t<template #right>\r\n\t\t\t\t<van-icon name=\"setting\" size=\"30\" />\r\n\t\t\t</template>\r\n\t\t</van-nav-bar>\r\n\t\t<div class=\"flex flex-col items-center px-5\">\r\n\t\t\t<CalendarComponent\r\n\t\t\t\t:rows=\"2\"\r\n\t\t\t\t:attributes=\"attributes\"\r\n\t\t\t\t:currentDate=\"currentDate\"\r\n\t\t\t\t@click=\"dayClick\"\r\n\t\t\t/>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\nimport CalendarComponent from '@/components/CalendarComponent.vue';\r\nimport secondaryFunctions from '@/mixins/secondary-functions';\r\nimport calendarFunctions from '@/mixins/calendar-functions';\r\nimport { ref } from 'vue';\r\nimport { computed } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { useStore } from 'vuex';\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst currentDate = new Date(secondaryFunctions.methods.formatter(new Date()));\r\nconst calendar = computed(() => store.state.Auth.calendar);\r\nconst ovulation = computed(() => store.state.Auth.ovulation);\r\nconst fertileDates = computed(() => store.state.Auth.fertileDates);\r\n\r\nconst attributes = ref(\r\n\tcalendarFunctions.methods.getAttrs(\r\n\t\tcalendar.value,\r\n\t\tovulation.value,\r\n\t\tfertileDates.value,\r\n\t\tcurrentDate\r\n\t)\r\n);\r\nconst activeDay = ref(store.state.Auth.notes.date);\r\n\r\nfunction dayClick(day) {\r\n\tif (!(new Date(day.id).getTime() > currentDate.getTime())) {\r\n\t\tactiveDay.value = day.id;\r\n\t\tlet i = calendarFunctions.methods.doesHaveDate(calendar.value, day.id);\r\n\t\tif (i == -1) {\r\n\t\t\tcalendar.value.push({ date: day.id });\r\n\t\t} else {\r\n\t\t\tcalendar.value.splice(i, 1);\r\n\t\t}\r\n\t\tstore.dispatch('Auth/setActiveDay', day.id);\r\n\t} else {\r\n\t\tactiveDay.value = null;\r\n\t\tstore.dispatch('Auth/setActiveDay', null);\r\n\t\tstore.dispatch('Auth/setNotes', patternNote);\r\n\t}\r\n\tattributes.value = calendarFunctions.methods.getAttrs(\r\n\t\tcalendar.value,\r\n\t\tovulation.value,\r\n\t\tfertileDates.value,\r\n\t\tcurrentDate\r\n\t);\r\n\tconsole.log(calendarFunctions.methods.sortDates(calendar.value));\r\n\t// store.dispatch('Auth/updateCalendar', calendar.value);\r\n}\r\n\r\nfunction onClickLeft() {\r\n\trouter.back();\r\n}\r\n\r\nfunction onClickRight() {\r\n\trouter.push({ name: 'SettingsView' });\r\n}\r\n</script>\r\n\r\n<style></style>\r\n"],"mappings":";;EACMA,KAAK,EAAC;AAAe;;EAWpBA,KAAK,EAAC;AAAiC;;;;uBAX7CC,mBAAA,CAmBM,OAnBNC,UAmBM,GAlBLC,YAAA,CAScC,sBAAA;IARb,YAAU,EAAV,EAAU;IACT,WAAS,EAAEC,IAAA,CAAAC,EAAE;IACbC,WAAU,EAAEC,MAAA,CAAAD,WAAW;IACvBE,YAAW,EAAED,MAAA,CAAAC;;IAEHC,KAAK,EAAAC,QAAA,CACf,MAAqC,CAArCR,YAAA,CAAqCS,mBAAA;MAA3BC,IAAI,EAAC,SAAS;MAACC,IAAI,EAAC;;;oCAGhCC,mBAAA,CAOM,OAPNC,UAOM,GANLb,YAAA,CAKEK,MAAA;IAJAS,IAAI,EAAE,CAAC;IACPC,UAAU,EAAEV,MAAA,CAAAU,UAAU;IACtBC,WAAW,EAAEX,MAAA,CAAAW,WAAW;IACxBC,OAAK,EAAEZ,MAAA,CAAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}