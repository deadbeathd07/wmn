{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport appBridge from './mixins/app-bridge';\nimport AppLoader from '@/components/main/AppLoader';\nimport { useStore } from 'vuex';\nimport { computed } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { watch } from 'vue';\nimport { useDark, useToggle } from '@vueuse/core';\nexport default {\n  __name: 'App',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    var store = useStore();\n    var router = useRouter();\n    var loading = computed(() => store.state.Auth.loading);\n    var entry = computed(() => store.state.Auth.entry);\n    var agreement = computed(() => store.state.Auth.agreement);\n    var guest = computed(() => store.state.Auth.guest);\n    var theme = computed(() => store.state.Auth.theme);\n    var isDark = useDark();\n    var toggleDark = useToggle(isDark);\n    console.log(isDark.value);\n\n    // // Testing block START\n    // //--------------------------------------------------------------------------------------------------\n\n    // // This authData and authentificate of it below are necessary for entry in browser (for developing)\n    var authData = {\n      uid: 'kjsdhfkjshdf ksdkjf',\n      firebase_token: ';osdhffsdhf',\n      theme_mode: 'dark',\n      lang: 'es',\n      google_id_token: '',\n      google_access_token: '',\n      platform: 'ios',\n      apple_user_id: '',\n      agreement: true\n    };\n    setTimeout(() => {\n      console.log('TRANSFER AUTH_DATA TO THE APP', JSON.stringify(authData));\n      return store.dispatch('Auth/authenticate', authData);\n    }, 2000);\n\n    // // Testing block END\n    // // --------------------------------------------------------------------------------------------------\n\n    appBridge.methods.nativeWaitForEvent('authToken', authData => {\n      store.dispatch('Auth/authenticate', authData);\n    });\n    appBridge.methods.nativeWaitForEvent('authTokenListen', authData => {\n      store.dispatch('Auth/authenticate', authData);\n      store.dispatch('Auth/newGoogleAuth');\n    });\n    watch(entry, (newEntry, oldEntry) => {\n      if (newEntry === 1) {\n        router.push({\n          name: 'TermsOfUseView'\n        });\n      }\n      if (newEntry === 0) {\n        store.dispatch('Auth/getAnswers');\n        // store.dispatch('Auth/getSelectedPlan');\n        store.dispatch('Auth/getCalendar');\n        store.dispatch('Auth/getNotesArr');\n      }\n    });\n    watch(agreement, (newAgreement, oldAgreement) => {\n      if (newAgreement === 1) {\n        router.push({\n          name: 'AuthorizationView'\n        });\n      }\n    });\n    watch(guest, (newGuest, oldGuest) => {\n      if (newGuest === 0) {\n        router.push({\n          name: 'HomeView'\n        });\n      }\n    });\n    var __returned__ = {\n      store,\n      router,\n      loading,\n      entry,\n      agreement,\n      guest,\n      theme,\n      isDark,\n      toggleDark,\n      get authData() {\n        return authData;\n      },\n      set authData(v) {\n        authData = v;\n      },\n      get appBridge() {\n        return appBridge;\n      },\n      get AppLoader() {\n        return AppLoader;\n      },\n      get useStore() {\n        return useStore;\n      },\n      computed,\n      get useRouter() {\n        return useRouter;\n      },\n      watch,\n      get useDark() {\n        return useDark;\n      },\n      get useToggle() {\n        return useToggle;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["appBridge","AppLoader","useStore","computed","useRouter","watch","useDark","useToggle","store","router","loading","state","Auth","entry","agreement","guest","theme","isDark","toggleDark","console","log","value","authData","uid","firebase_token","theme_mode","lang","google_id_token","google_access_token","platform","apple_user_id","setTimeout","JSON","stringify","dispatch","methods","nativeWaitForEvent","newEntry","oldEntry","push","name","newAgreement","oldAgreement","newGuest","oldGuest"],"sources":["D:/working/wmn-calendar.itserve.es/src/App.vue"],"sourcesContent":["<template>\r\n\t<van-row\r\n\t\tclass=\"h-full bg-light dark:bg-dark bg-no-repeat bg-clip-border bg-origin-border bg-center bg-cover\"\r\n\t\tjustify=\"center\"\r\n\t>\r\n\t\t<van-col span=\"24\" class=\"h-full\">\r\n\t\t\t<AppLoader :show=\"loading\" />\r\n\t\t\t<router-view />\r\n\t\t</van-col>\r\n\t</van-row>\r\n</template>\r\n<script setup>\r\nimport appBridge from './mixins/app-bridge';\r\nimport AppLoader from '@/components/main/AppLoader';\r\nimport { useStore } from 'vuex';\r\nimport { computed } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { watch } from 'vue';\r\nimport { useDark, useToggle } from '@vueuse/core';\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\n\r\nconst loading = computed(() => store.state.Auth.loading);\r\nconst entry = computed(() => store.state.Auth.entry);\r\nconst agreement = computed(() => store.state.Auth.agreement);\r\nconst guest = computed(() => store.state.Auth.guest);\r\nconst theme = computed(() => store.state.Auth.theme);\r\n\r\nconst isDark = useDark();\r\nconst toggleDark = useToggle(isDark);\r\n\r\nconsole.log(isDark.value);\r\n\r\n// // Testing block START\r\n// //--------------------------------------------------------------------------------------------------\r\n\r\n// // This authData and authentificate of it below are necessary for entry in browser (for developing)\r\nlet authData = {\r\n\tuid: 'kjsdhfkjshdf ksdkjf',\r\n\tfirebase_token: ';osdhffsdhf',\r\n\ttheme_mode: 'dark',\r\n\tlang: 'es',\r\n\tgoogle_id_token: '',\r\n\tgoogle_access_token: '',\r\n\tplatform: 'ios',\r\n\tapple_user_id: '',\r\n\tagreement: true,\r\n};\r\n\r\nsetTimeout(() => {\r\n\tconsole.log('TRANSFER AUTH_DATA TO THE APP', JSON.stringify(authData));\r\n\treturn store.dispatch('Auth/authenticate', authData);\r\n}, 2000);\r\n\r\n// // Testing block END\r\n// // --------------------------------------------------------------------------------------------------\r\n\r\nappBridge.methods.nativeWaitForEvent('authToken', authData => {\r\n\tstore.dispatch('Auth/authenticate', authData);\r\n});\r\n\r\nappBridge.methods.nativeWaitForEvent('authTokenListen', authData => {\r\n\tstore.dispatch('Auth/authenticate', authData);\r\n\tstore.dispatch('Auth/newGoogleAuth');\r\n});\r\n\r\nwatch(entry, (newEntry, oldEntry) => {\r\n\tif (newEntry === 1) {\r\n\t\trouter.push({ name: 'TermsOfUseView' });\r\n\t}\r\n\tif (newEntry === 0) {\r\n\t\tstore.dispatch('Auth/getAnswers');\r\n\t\t// store.dispatch('Auth/getSelectedPlan');\r\n\t\tstore.dispatch('Auth/getCalendar');\r\n\t\tstore.dispatch('Auth/getNotesArr');\r\n\t}\r\n});\r\n\r\nwatch(agreement, (newAgreement, oldAgreement) => {\r\n\tif (newAgreement === 1) {\r\n\t\trouter.push({ name: 'AuthorizationView' });\r\n\t}\r\n});\r\n\r\nwatch(guest, (newGuest, oldGuest) => {\r\n\tif (newGuest === 0) {\r\n\t\trouter.push({ name: 'HomeView' });\r\n\t}\r\n});\r\n</script>\r\n<style>\r\n:root {\r\n\t--van-primary-color: rgba(236, 101, 124, 1);\r\n\t--van-background-2: white;\r\n}\r\n\r\n/* .bg-light {\r\n\tbackground-image: url('@/assets/images/bg-light.png');\r\n} */\r\n\r\n.bg-cloud {\r\n\tbackground-image: url('@/assets/images/cloud.png');\r\n}\r\n\r\n.van-hairline-unset--top-bottom:after {\r\n\tborder-width: 4px;\r\n\tborder-color: red;\r\n\tborder-radius: 16px;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}