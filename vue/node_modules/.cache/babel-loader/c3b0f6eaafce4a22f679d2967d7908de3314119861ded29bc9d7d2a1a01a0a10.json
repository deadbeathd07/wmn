{"ast":null,"code":"import appBridge from '@/mixins/app-bridge';\nimport { ref } from 'vue';\nimport { onMounted } from 'vue';\nimport { useStore } from 'vuex';\nexport default {\n  __name: 'ThemeSwitch',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    var store = useStore();\n    var checked = ref(false);\n    var theme = computed(() => store.state.Auth.theme);\n\n    // onMounted(() => {\n    // \tif (theme === 'dark') {\n    // \t\tchecked.value = true;\n    // \t}\n    // });\n\n    function changeTheme() {\n      if (checked.value) {\n        store.dispatch('Auth/putTheme', 'dark');\n        // appBridge.methods.nativeSendEvent('setThemeMode', 'dark');\n      } else {\n        store.dispatch('Auth/putTheme', 'light');\n        // appBridge.methods.nativeSendEvent('setThemeMode', 'light');\n      }\n    }\n\n    var __returned__ = {\n      store,\n      checked,\n      theme,\n      changeTheme,\n      get appBridge() {\n        return appBridge;\n      },\n      ref,\n      onMounted,\n      get useStore() {\n        return useStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["appBridge","ref","onMounted","useStore","store","checked","theme","computed","state","Auth","changeTheme","value","dispatch"],"sources":["D:/working/wmn-calendar.itserve.es/src/components/specific/ThemeSwitch.vue"],"sourcesContent":["<template>\r\n\t<van-cell\r\n\t\tcenter\r\n\t\t:title=\"checked ? $t('settings.theme.dark') : $t('settings.theme.light')\"\r\n\t>\r\n\t\t<template #right-icon>\r\n\t\t\t<van-switch v-model=\"checked\" @change=\"changeTheme\" />\r\n\t\t</template>\r\n\t</van-cell>\r\n</template>\r\n\r\n<script setup>\r\nimport appBridge from '@/mixins/app-bridge';\r\nimport { ref } from 'vue';\r\nimport { onMounted } from 'vue';\r\nimport { useStore } from 'vuex';\r\n\r\nconst store = useStore();\r\n\r\nconst checked = ref(false);\r\n\r\nconst theme = computed(() => store.state.Auth.theme);\r\n\r\n// onMounted(() => {\r\n// \tif (theme === 'dark') {\r\n// \t\tchecked.value = true;\r\n// \t}\r\n// });\r\n\r\nfunction changeTheme() {\r\n\tif (checked.value) {\r\n\t\tstore.dispatch('Auth/putTheme', 'dark');\r\n\t\t// appBridge.methods.nativeSendEvent('setThemeMode', 'dark');\r\n\t} else {\r\n\t\tstore.dispatch('Auth/putTheme', 'light');\r\n\t\t// appBridge.methods.nativeSendEvent('setThemeMode', 'light');\r\n\t}\r\n}\r\n</script>\r\n\r\n<style scoped></style>\r\n"],"mappings":"AAYA,OAAOA,SAAS,MAAM,qBAAqB;AAC3C,SAASC,GAAG,QAAQ,KAAK;AACzB,SAASC,SAAS,QAAQ,KAAK;AAC/B,SAASC,QAAQ,QAAQ,MAAM;;;;;;;IAE/B,IAAMC,KAAK,GAAGD,QAAQ,CAAC,CAAC;IAExB,IAAME,OAAO,GAAGJ,GAAG,CAAC,KAAK,CAAC;IAE1B,IAAMK,KAAK,GAAGC,QAAQ,CAAC,MAAMH,KAAK,CAACI,KAAK,CAACC,IAAI,CAACH,KAAK,CAAC;;IAEpD;IACA;IACA;IACA;IACA;;IAEA,SAASI,WAAWA,CAAA,EAAG;MACtB,IAAIL,OAAO,CAACM,KAAK,EAAE;QAClBP,KAAK,CAACQ,QAAQ,CAAC,eAAe,EAAE,MAAM,CAAC;QACvC;MACD,CAAC,MAAM;QACNR,KAAK,CAACQ,QAAQ,CAAC,eAAe,EAAE,OAAO,CAAC;QACxC;MACD;IACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}