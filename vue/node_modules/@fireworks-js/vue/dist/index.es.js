/**
 * name: @fireworks-js/vue
 * version: 2.10.7
 * author: Vitalij Ryndin (https://crashmax.ru)
 * homepage: https://fireworks.js.org
 * license MIT
 */
import { defineComponent as s, ref as o, onMounted as p, onUnmounted as i, openBlock as l, createElementBlock as c } from "vue";
import { Fireworks as v } from "fireworks-js";
const w = /* @__PURE__ */ s({
  __name: "fireworks",
  props: {
    autostart: {
      type: Boolean,
      default: !0
    },
    options: {
      type: Object,
      required: !1
    }
  },
  setup(r, { expose: u }) {
    const a = r, n = o(), e = o();
    return p(() => {
      e.value = new v(n.value, a.options), a.autostart && e.value.start();
    }), i(() => {
      e.value.stop();
    }), u({
      get isRunning() {
        return e.value.isRunning;
      },
      get currentOptions() {
        return e.value.currentOptions;
      },
      start() {
        e.value.start();
      },
      launch(t) {
        e.value.launch(t);
      },
      stop() {
        e.value.stop();
      },
      async waitStop() {
        await e.value.waitStop();
      },
      pause() {
        e.value.pause();
      },
      clear() {
        e.value.clear();
      },
      updateOptions(t) {
        e.value.updateOptions(t);
      },
      updateSize(t) {
        e.value.updateSize(t);
      },
      updateBoundaries(t) {
        e.value.updateBoundaries(t);
      }
    }), (t, d) => (l(), c("div", {
      ref_key: "container",
      ref: n
    }, null, 512));
  }
});
export {
  w as Fireworks,
  w as default
};
